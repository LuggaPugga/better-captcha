name: Publish Package

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to publish'
        required: true
        type: choice
        options:
          - react
          - solidjs

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: 1.3.0

      - name: Install dependencies
        run: bun install

      - name: Get package info
        id: package_info
        run: |
          PACKAGE_PATH="packages/${{ github.event.inputs.package }}"
          PACKAGE_NAME=$(cat ${PACKAGE_PATH}/package.json | grep '"name"' | head -1 | sed 's/.*"name": "\(.*\)".*/\1/')
          VERSION=$(cat ${PACKAGE_PATH}/package.json | grep '"version"' | head -1 | sed 's/.*"version": "\(.*\)".*/\1/')
          echo "package_path=${PACKAGE_PATH}" >> $GITHUB_OUTPUT
          echo "package_name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${PACKAGE_NAME}@${VERSION}" >> $GITHUB_OUTPUT

      - name: Build core package
        run: |
          cd packages/core
          bun run build

      - name: Build selected package
        run: |
          cd ${{ steps.package_info.outputs.package_path }}
          bun run build

      - name: Publish to npm
        run: |
          cd ${{ steps.package_info.outputs.package_path }}
          bun publish --access public
        env:
          NPM_CONFIG_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Generate changelog
        id: changelog
        run: |
          # Get the previous tag for this package
          PREV_TAG=$(git tag -l "${{ steps.package_info.outputs.package_name }}@*" | sort -V | tail -n 1)
          
          if [ -z "$PREV_TAG" ]; then
            # If no previous tag, get all commits for this package
            COMMITS=$(git log --pretty=format:"- %s (%h)" -- ${{ steps.package_info.outputs.package_path }} | grep -v -i "renovate")
          else
            # Get commits since last tag for this package
            COMMITS=$(git log ${PREV_TAG}..HEAD --pretty=format:"- %s (%h)" -- ${{ steps.package_info.outputs.package_path }} | grep -v -i "renovate")
          fi
          
          # If no commits found, use a default message
          if [ -z "$COMMITS" ]; then
            COMMITS="- Release ${{ steps.package_info.outputs.version }}"
          fi
          
          # Create changelog
          if [ -z "$PREV_TAG" ]; then
            CHANGELOG="## What's Changed

          ${COMMITS}"
          else
            CHANGELOG="## What's Changed

          ${COMMITS}

          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${PREV_TAG}...${{ steps.package_info.outputs.tag }}"
          fi
          
          # Save to file for multiline handling
          echo "$CHANGELOG" > /tmp/changelog.md

      - name: Create Git tag
        run: |
          git tag ${{ steps.package_info.outputs.tag }}
          git push origin ${{ steps.package_info.outputs.tag }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.package_info.outputs.tag }}
          release_name: ${{ steps.package_info.outputs.package_name }} v${{ steps.package_info.outputs.version }}
          body_path: /tmp/changelog.md
          draft: false
          prerelease: false

      - name: Summary
        run: |
          echo "## ðŸš€ Published ${{ steps.package_info.outputs.package_name }}@${{ steps.package_info.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Package Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: \`${{ steps.package_info.outputs.package_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: \`${{ steps.package_info.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **NPM**: https://www.npmjs.com/package/${{ steps.package_info.outputs.package_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Release**: https://github.com/${{ github.repository }}/releases/tag/${{ steps.package_info.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
